yamleer: Yamleer is a Domain-Specific Language designed to generate json schema
configuration:
  generator: GPT-4
  targetLanguage: Json Schema
  guidelines:
    - only the key starting with * should be marked as required in the json schema
    - /text/ represents a regex pattern or a naming convention
    - #(text) represents the description of the key that should be included in the json schema
    - only the childs of "convertibles:" should be converted to the json schema
    - the first world of the leers description is the leers name
    - leers name and description should also be included in the json schema 
  codingStyle:
    - allow whitespaces in keys name, eg "my key:" instead of "my_key:"
convertibles:
  leers: Reactleers is a domain-specific language that represents React components #(The description of the leers)
  configuration:
    generator: string #(The intended AI generator)
    targetLanguage: string #(Target language in which Reactleers will be converted)
    context: string[] #(Specify the context in wich Reactleers is used)
    codingStyle: string[] #(Coding style preferences)
  structure: rstruct #(Structure of the components)
  components: {reactComponent: component}[] #(List of React components)
types:
  component:
    path: string #(File path of the component)
    props: (string or {string: string})[] #(Component's properties)
    states: {string: string}[] #(Component's states)
    behavior: string[] #(Component's behavior)
    layout: string[] #(Component's layout)
    content: string #(Component's content)
    importFrom: string #(Path to the imported component)
  rstruct: null or {reactComponent: rstruct} or forLoop or ifCondition
  forLoop: {forRule: reactComponent} #(For loop structure)
  ifCondition: {ifRule: {string: reactComponent}[]} #(Conditional structure)
  reactComponent: string /Pascal case/
  forRule: string /"for "string/
  ifRule: string /"if "string/
